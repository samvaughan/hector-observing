{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Making Hector Tiles for Observing","text":"<p>Documentation for the code which makes the tile and robot files used at the telescope when observing for the Hector Galaxy Survey.</p> <p>The steps to make a tile are below. These are performed are performed automatically using the workflow tool <code>snakemake</code>. See Making a Hector Tile for more details!</p>"},{"location":"#quick-overview-of-pipeline-steps","title":"Quick Overview of Pipeline Steps","text":"<ol> <li>Remove all guide stars which are outside the central 70% of the field. (<code>select_guides_within_set_radius.py</code>).</li> <li>Copy the tile and guide tile to the <code>results/{run_start_date}_{run_end_date}/TilingOutputs/{region_name}/Tiles</code> folder.</li> <li>Run the distortion correction code, which turns right-ascension and declination into plate $x$ and $y$ coordinates and finds the appropriate sky-fibre positions (<code>run_distortion_correction_code.py</code>).</li> <li>Run the configuration code, which finds magnet positions across the plate (<code>HECTOR_ClusterFieldsTest.R</code>).</li> <li>Fix the file headers into the correct format (<code>fix_header_after_configuration.py</code>).</li> <li>Run the allocation code, which decides which hexabundle is placed on which galaxy. This code also creates the final output files in the format required by the computers at the AAT (<code>allocate_tile_for_galaxies.py</code>).</li> <li>Download the galaxy cutouts for each Hexabundle, Guide bundle and sky fibre (<code>get_galaxy_cutouts_DECALS.py</code> or <code>get_galaxy_cutouts_KIDS.py</code>).</li> <li>Run a series of sanity-checks to catch a number of simple mistakes (e.g. we check the number of guide bundles in each tile is 6, etc). Also use the Hector observing database to see how many galaxies in this tile have been observed before (<code>verify_tile_properties.py</code>).</li> <li>Add the tile to our database of configured tiles (<code>add_configured_tile_to_database.py</code>).</li> <li>Make the plot the observers used at the top-end of the telescope (<code>make_updated_hexabundle_diagrams.py</code>).</li> <li>Package everything up in a nice format which can be easily uploaded to the cloud.</li> </ol> <p>You can now upload the <code>{tile_ID}.tar.gz</code> file to the Data Central cloud.</p>"},{"location":"FAQs/","title":"FAQs","text":"<p>Below are some frequently asked questions or bugs that have arisen during our use of the pipeline.</p>"},{"location":"FAQs/#the-allocation-code-fails-and-says-some-magnets-are-fully-blocked","title":"The allocation code fails and says \"Some magnets are fully blocked!\"","text":"<p>This means that there is no way for the Robot to place the magnets in the desired positions. The robot arm itself has a set clearance when it picks up and puts down magnets, and so some magnet configurations which don't clash aren't actually possible to put on the plate.</p> <p>In this case, you'll need to go back and use the interactive configuration tool to change the magnet positions to have a bit more clearance. The error message will let you know which magnets are affected.</p>"},{"location":"FAQs/#snakemake-has-an-error-which-mentions-the-files-below-seem-to-be-incomplete","title":"Snakemake has an error which mentions \"<code>The files below seem to be incomplete</code>\".","text":"<p>This happens when a <code>snakemake</code> task doesn't finish properly- often because it's been killed by someone pressing <code>Ctrl-C</code>. It's basically saying \"I don't know if the files below are finished or not!\".</p> <p>If you want to re-run the task which <code>snakemake</code> was in the middle of before it was killed, add <code>--rerun-incomplete</code> to the beginning of your command (e.g <code>snakemake --rerun-incomplete --configfile ...</code> etc). </p> <p>If you don't want to re-run the command that was killed, there are two options. I've found the best thing to do is delete the <code>.snakemake</code> folder: <code>rm -r .snakemake</code>. This deletes <code>snakemake's</code> history and it just forgets that it was halfway through a step. You can also follow the commands that <code>snakemake</code> suggests, about \"cleaning up metadata\", but I've found that this often doesn't work for some reason... (see e.g. this github issue).</p>"},{"location":"FAQs/#snakemake-complains-about-index-0-is-out-of-bounds-for-axis-with-size-0-and-mentions-the-_get_tile_filename-function","title":"Snakemake complains about \"<code>Index 0 is out of bounds for axis with size 0</code>\" and mentions the <code>_get_tile_filename</code> function.","text":"<p>This happens because Snakemake is trying to select a row from your <code>{start_date}_{end_date}_galaxy_tiles.csv</code> but there aren't any matches. Check that you've typed the tile filename exactly right on the command line (it's very easy to type <code>G12_tile_220</code> instead of <code>G15_tile_220</code>, for example!)</p>"},{"location":"Making_A_Hector_Tile/","title":"Making a Hector Tile","text":"<p>Below is a detailed set of instructions for making the files we need at the telescope. </p>"},{"location":"Making_A_Hector_Tile/#at-the-beginning-of-a-run","title":"At the beginning of a run","text":"<ul> <li>Make a new folder with the format <code>{run_start_date}_{run_end_date}</code> in the <code>resources</code> folder: e.g. <code>20240306_20240318</code> for an observing run between March 3rd and March 18th in 2024.</li> <li>Take the tiles from the Hector Tiling code and transfer them into this directory.</li> <li>Make a new file called <code>{run_start_date}_{run_end_date}_galaxy_tiles.csv</code>, e.g. <code>20240306_20240318_galaxy_tiles.csv</code>. This must have the columns named <code>field,tile_number,filename,guide_filename,image_source</code>. Each tile you want to run the pipeline on must be included here on a separate row.</li> <li>Pick a tile to make. Fill out the row in the <code>{run_start_date}_{run_end_date}_galaxy_tiles.csv</code> file with the correct information. The <code>image_source</code> column should be '<code>DECALS</code>' for all regions other than the G23 field where it should be '<code>KIDS</code>'. All filenames are relative to the main observing folder, i.e. they should begin with <code>resources/{run_start_date}_{run_end_date}/</code> etc.</li> <li>Now update the config file, which lives in <code>config/</code>. TODO: Write up explanation for this file.</li> </ul>"},{"location":"Making_A_Hector_Tile/#making-a-tile","title":"Making a tile","text":"<ul> <li>Make sure the <code>hector</code> environment has been activated. TODO: Add page about the Hector environment. </li> <li>Make sure the sky masks are available (i.e. plug in your external hard drive!)</li> <li>From the main folder, run <code>snakemake -npr --cores 1 --configfile config/{run_start_date}_{run_end_date}.yaml -- results/{run_start_date}_{run_end_date}/Upload/{tile_file_name}.tar.gz</code>. This will show you the commands which <code>snakemake</code> is about to run.</li> <li>To actually execute these, run <code>snakemake --cores 1 --configfile config/{run_start_date}_{run_end_date}.yaml -- results/{run_start_date}_{run_end_date}/Upload/{tile_file_name}.tar.gz</code> (i.e. remove the <code>-npr</code> bit).</li> </ul> <p>All going well, the pipeline will continue and the <code>R</code> plotting window will appear like so:</p> <p></p> <p>This can take 30-60 minutes to complete, so probably best to leave it running in the background while you do something else!</p> <p>When the R code is complete, the allocation code will run and assign which Hexabundle (A through to U) will be placed on which target. </p>"},{"location":"scripts/","title":"Scripts","text":"<p>There are several scripts included in the repository which perform helpful tasks. Running any of the scripts below with the single argument <code>-h</code> will print out some useful text describing each argument and the script's purpose.</p>"},{"location":"scripts/#swapping-hexabundles","title":"Swapping Hexabundles","text":"<p>It is often important to swap the Hexabundles which are assigned by the allocation code between galaxies. You can do this using the script <code>swap_hexabundles.py</code>.</p> <p>The inputs for this script are the \"tile\" and \"robot\" files in the \"FinalOutputs\" folder. You then supply the Hexabundles you wish to swap as a pair of letters separated by a dash. Multiple pairs of Hexabundles may be passed at the same time. For example, to swap the galaxies placed on Hexabundles J and K for the tile G15 tile 220, you d run:</p> <pre><code>python swap_hexabundle.py results/20240306_20240318/TilingOutputs/G15/FinalOutputs/Tile_G15_T220.csv results/20240306_20240318/TilingOutputs/G15/FinalOutputs/Robot_G15_T220.csv J-K\n</code></pre> <p>The script makes a backup of the original file, which is saved to the original filename with <code>.backup</code> appended to the end. If you'd like to undo your changes, just run </p> <pre><code>mv path/to/Tile_G15_T220.csv.backup path/to/Tile_G15_T220.csv\n</code></pre>"},{"location":"scripts/#selecting-guide-stars-for-a-tile","title":"Selecting Guide Stars for a tile","text":"<p>It's often useful to be able to select which guide stars you'd like to include in a tile. We can do that using <code>select_guides_from_file.py</code>.</p> <p>The input is a guide file which hasn't been configured by the R code, i.e. it should have <code>NOT_CONFIGURED</code> in the filename. You also pass the integer IDs of the 6 guide stars you'd like to select (i.e. the numbers which are shown in the interactive configuration tool).</p> <p>For example, to select the guide stars 1, 3, 5, 7, 9 and 11 from G15 tile 220, you'd run:</p> <pre><code>python select_guides_from_file.py results/20240306_20240318/TilingOutputs/G15/Configuration/Guides_G15_tile_220_NOT_CONFIGURED.csv 1 3 5 7 9 11\n</code></pre> <p>The script makes a backup by copying the original file to a file with the same name with <code>.backup</code> appended to the end. If you'd like to undo your changes, you can just run:</p> <pre><code>mv path/to/Guides_G15_tile_220_NOT_CONFIGURED.csv.backup pat/to/Guides_G15_tile_220_NOT_CONFIGURED.csv\n</code></pre>"},{"location":"scripts/#selecting-standard-stars-for-a-tile","title":"Selecting Standard Stars for a tile","text":""},{"location":"worked_example/","title":"Worked Example: G15 tile 221","text":"<p>Below is a worked example of making G15 tile 221 ready for use at the telescope.</p>"}]}